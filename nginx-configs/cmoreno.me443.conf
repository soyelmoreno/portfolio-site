##
# Server configuration for main site: cmoreno.me
#

# First server block just redirects HTTP to HTTPS
server {
  listen 80;
  server_name cmoreno.me www.cmoreno.me hello.cmoreno.me book.cmoreno.me;

  return 301 https://$host$request_uri;
}

# Now the HTTPS server block
server {
  listen 443 default_server;
  listen [::]:443 default_server;

  server_name cmoreno.me www.cmoreno.me;

  # Some stuff in here from: https://www.youtube.com/watch?v=-QcQd3Bkc9o
  # Code: https://github.com/gusgad/youtube-tutorials/blob/nodejs-nginx/nginx.conf
  ssl_certificate /path/to/ssl_certificate.crt;
  ssl_certificate_key /path/to/ssl_private_key.key;

  ssl_protocols [TLSv1.2] [TLSv1.3];
  ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384';

  ssl_session_cache [shared:SSL:10m];
  ssl_session_timeout 10m;

  ssl_stapling on;
  ssl_stapling_verify on;

  ssl_trusted_certificate /path/to/trusted_certificate_authority.crt;

  root /var/www/cmoreno.me/public_html;

  proxy_buffering on;
  proxy_buffer_size 8k;
  proxy_buffers 2048 8k;
  proxy_busy_buffers_size 16k;

  # Note: You probably don't need load balancing unless you have an enterprise
  # application, with say, 500 requests per minute, so there is some real
  # pressure on the server.
  upstream backend_servers {
    server backend_server1_ip:port;
    server backend_server2_ip:port;
    # Add more backedn servers as needed
    # server backend_server3_ip:port;
  }

  # Add index.php to the list if you are using PHP (DONE)
  index index.php index.html;

  location / {
    # First attempt to serve request as file, then
    # as directory, then fall back to displaying a 404.
    try_files $uri $uri/ =404;

    # proxy_pass http://127.0.0.1/;
    #
    # proxy_pass backend_servers;
    #
    # proxy_set_header Host $host;
    # proxy_set_header X-Real-IP $remote_addr;
    # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # proxy_set_header X-Forwarded-Proto $scheme;
    #
    # proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    # proxy_redirect off;
    #
    # error_page 500 502 503 504 /error.html
    # location = /error.html {
    #   root /path/to/error/pages;
    #   internal;
    # }
    #
    # Define caching rules for static images
    # location ~* \.(jpg|jpeg|png|gif|ico)$ {
    #   expires 30d; # Adjust the caching duration as needed
    #   add_header Cache-Control "public, max-age=2592000";
    # }
    #
    # gzip on;
    # gzip_types text/plain text/css application/javascript image/*;
    #
    # access_log /var/log/nginx/access.log;
    # error_log /var/log/nginx/error.log;
  }

  # Pass PHP scripts on Nginx to FastCGI server (PHP-FPM) server
  location ~ \.php$ {
    include snippets/fastcgi-php.conf;
    # Note: PHP version here has to match your installed version!
    fastcgi_pass unix:/run/php/php8.3-fpm.sock;
  }

  # Deny access to Apache .htaccess on Nginx with PHP, if Apache and Nginx
  # document roots concur
  location ~ /\.ht {
    deny all;
  }
}
